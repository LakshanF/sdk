<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup Condition="'$(RuntimeIdentifier)' != ''">

    <!-- Define the name of the runtime specific compiler package to import -->
    <OSIdentifier Condition="$(RuntimeIdentifier.StartsWith('win'))">win</OSIdentifier>
    <OSIdentifier Condition="$(RuntimeIdentifier.StartsWith('osx'))">osx</OSIdentifier>
    <OSIdentifier Condition="$(RuntimeIdentifier.StartsWith('linux-musl')) OR $(RuntimeIdentifier.StartsWith('alpine'))">linux-musl</OSIdentifier>
    <OSIdentifier Condition="'$(OSIdentifier)' == ''">linux</OSIdentifier>

    <!-- Determine TargetArchitecture from RuntimeIdentifier -->
    <RidWithHyphen>$(RuntimeIdentifier)-</RidWithHyphen>
    <TargetArchitecture Condition="$(RidWithHyphen.Contains('-x86-'))">x86</TargetArchitecture>
    <TargetArchitecture Condition="$(RidWithHyphen.Contains('-x64-'))">x64</TargetArchitecture>
    <TargetArchitecture Condition="$(RidWithHyphen.Contains('-arm-'))">arm</TargetArchitecture>
    <TargetArchitecture Condition="$(RidWithHyphen.Contains('-arm64-'))">arm64</TargetArchitecture>
    <TargetArchitecture Condition="'$(TargetArchitecture)' == ''">unknown</TargetArchitecture>

    <RuntimeIlcPackageName>runtime.$(OSIdentifier)-$(TargetArchitecture).Microsoft.DotNet.ILCompiler</RuntimeIlcPackageName>

    <OSHostArch>$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture.ToString().ToLowerInvariant)</OSHostArch>
    <!-- OSArchitecture does not report the true OS architecture for x86 and x64 processes running on Windows ARM64. -->
    <!-- The following condition checks those cases. -->
    <OSHostArch Condition="$([MSBuild]::IsOSPlatform('Windows')) and
        $([System.Environment]::GetEnvironmentVariable('PROCESSOR_ARCHITECTURE', EnvironmentVariableTarget.Machine)) == 'ARM64'">arm64</OSHostArch>

    <IlcHostArch Condition="'$(IlcHostArch)' == ''">$(OSHostArch)</IlcHostArch>
    <IlcHostPackageName>runtime.$(OSIdentifier)-$(IlcHostArch).Microsoft.DotNet.ILCompiler</IlcHostPackageName>
    <IlcCalledViaPackage>true</IlcCalledViaPackage>

  </PropertyGroup>

  <PropertyGroup>

    <!-- If CoreRT is being consumed via its package, runtime-specific properties must be set before compilation can proceed -->
    <ImportRuntimeIlcPackageTargetDependsOn>RunResolvePackageDependencies</ImportRuntimeIlcPackageTargetDependsOn>
    <IlcSetupPropertiesDependsOn>ImportRuntimeIlcPackageTarget</IlcSetupPropertiesDependsOn>
    <IlcDynamicBuildPropertyDependencies>SetupProperties</IlcDynamicBuildPropertyDependencies>

  </PropertyGroup>

  <!-- Locate the runtime package according to the current target runtime -->
  <Target Name="ImportRuntimeIlcPackageTarget" Condition="'$(PublishNativeAot)' == 'true' AND '$(BuildingFrameworkLibrary)' != 'true' AND $(IlcCalledViaPackage) == 'true'" DependsOnTargets="$(ImportRuntimeIlcPackageTargetDependsOn)" BeforeTargets="Publish">
    <ItemGroup>
      <PackageDefinitions Include = "Microsoft.DotNet.ILCompiler/7.0.0-preview.3.22171.4">
        <Type>package</Type>
        <Version>7.0.0-preview.3.22171.4</Version>
        <DiagnosticLevel></DiagnosticLevel>
        <Name>Microsoft.DotNet.ILCompiler</Name>
        <ResolvedPath>C:\Users\Administrator\.nuget\packages\microsoft.dotnet.ilcompiler\7.0.0-preview.3.22171.4</ResolvedPath>
        <Path>microsoft.dotnet.ilcompiler/7.0.0-preview.3.22171.4</Path>
      </PackageDefinitions>
      <PackageDefinitions Include = "runtime.win-x64.Microsoft.DotNet.ILCompiler/7.0.0-preview.3.22171.4">
        <Type>package</Type>
        <Version>7.0.0-preview.3.22171.4</Version>
        <DiagnosticLevel></DiagnosticLevel>
        <Name>runtime.win-x64.Microsoft.DotNet.ILCompiler</Name>
        <ResolvedPath>C:\Users\Administrator\.nuget\packages\runtime.win-x64.microsoft.dotnet.ilcompiler\7.0.0-preview.3.22171.4</ResolvedPath>
        <Path>runtime.win-x64.microsoft.dotnet.ilcompiler/7.0.0-preview.3.22171.4</Path>
      </PackageDefinitions>
      <PackageDependencies Include = "Microsoft.DotNet.ILCompiler/7.0.0-preview.3.22171.4">
        <ParentTarget>net6.0</ParentTarget>
        <ParentPackage></ParentPackage>
      </PackageDependencies>
      <PackageDependencies Include = "Microsoft.DotNet.ILCompiler/7.0.0-preview.3.22171.4">
        <ParentTarget>net6.0/win-x64</ParentTarget>
        <ParentPackage></ParentPackage>
      </PackageDependencies>
      <PackageDependencies Include = "runtime.win-x64.Microsoft.DotNet.ILCompiler/7.0.0-preview.3.22171.4">
        <ParentTarget>net6.0/win-x64</ParentTarget>
        <ParentPackage>Microsoft.DotNet.ILCompiler/7.0.0-preview.3.22171.4</ParentPackage>
      </PackageDependencies>
    </ItemGroup>
    <!-- CoreRT SDK and Framework Assemblies need to be defined to avoid CoreCLR implementations being set as compiler inputs -->
    <Error Condition="'@(PackageDefinitions)' == ''" Text="The PackageDefinitions ItemGroup is required for target ImportRuntimeIlcPackageTarget" />

    <PropertyGroup>
      <RuntimePackagePath Condition="'%(PackageDefinitions.Name)' == '$(RuntimeIlcPackageName)'">%(PackageDefinitions.ResolvedPath)</RuntimePackagePath>
      <IlcHostPackagePath Condition="'%(PackageDefinitions.Name)' == '$(IlcHostPackageName)'">%(PackageDefinitions.ResolvedPath)</IlcHostPackagePath>
    </PropertyGroup>
  </Target>

  <Import Project="$(MSBuildThisFileDirectory)\Microsoft.NETCore.Native.targets" />

</Project>
